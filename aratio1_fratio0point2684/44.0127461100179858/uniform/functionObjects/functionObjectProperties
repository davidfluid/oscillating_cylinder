/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "44.0127461100179858/uniform/functionObjects";
    object      functionObjectProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

results
{
    inMassFlow
    {
        scalar
        {
            sum(in,phi)     -100;
        }
    }
    outMassFlow
    {
        scalar
        {
            sum(out,phi)    100.0000000750676;
        }
    }
    forces_object
    {
        vector
        {
            normalForce     ( 15.772076 -17.031954 -3.2987288e-19 );
            tangentialForce ( 0.5896711 -2.4306165 -1.3546391e-20 );
            porousForce     ( 0 0 0 );
            normalMoment    ( 3.4283156e-19 7.7456588e-19 -27.830031 );
            tangentialMoment ( 1.8438298e-20 7.864548300000001e-21 -6.2360975 );
            porousMoment    ( 0 0 0 );
        }
    }
    forceCoeffs_object
    {
        scalar
        {
            Cd              16.36174717505396;
            Cs              3.43419271109309e-19;
            Cl              -19.46257083320437;
            CmRoll          3.612698583309347e-19;
            CmPitch         34.06612797864296;
            CmYaw           7.824304286318133e-19;
            Cd(f)           8.18087358752698;
            Cd(r)           8.18087358752698;
            Cs(f)           9.541400641864679e-19;
            Cs(r)           -6.107207930771589e-19;
            Cl(f)           24.33484256204077;
            Cl(r)           -43.79741339524514;
        }
    }
    minmaxdomain
    {
        vector
        {
            min(U)          ( 0.8963499 -4.1684917 -2.2075879e-18 );
            min(U)_position ( 2.6609936 0.12158262 0 );
            max(U)          ( 3.9523615 2.8734143 2.1745624e-18 );
            max(U)_position ( 3.0110259 -1.0972617 0 );
            min(p)_position ( 2.3359078 -0.75945224 1.4446737e-17 );
            max(p)_position ( 0.30029765 0.4899389 0 );
        }
        label
        {
            min(U)_cell     5799;
            min(U)_processor 0;
            max(U)_cell     5859;
            max(U)_processor 0;
            min(p)_cell     6950;
            min(p)_processor 0;
            max(p)_cell     7005;
            max(p)_processor 0;
        }
        scalar
        {
            min(p)          -15.05867720450388;
            max(p)          2.296181178586991;
        }
    }
}


// ************************************************************************* //
